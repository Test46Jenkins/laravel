name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch :

jobs:
    
  composer_stage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, bcmath, pdo, mysql, gcc, zip, unzip

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ github.ref_name }}-composer
          restore-keys: |
            ${{ github.ref_name }}-composer

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts

      - name: Upload vendor directory as artifact
        uses: actions/upload-artifact@v3
        with:
          name: vendor
          path: vendor/

  npm_stage:
    runs-on: ubuntu-latest
    needs: composer_stage
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ github.ref_name }}-npm
          restore-keys: |
            ${{ github.ref_name }}-npm

      - name: Install npm dependencies
        run: npm install

      - name: Build assets for production
        run: npm run dev

    
  Deploy_Stage:
    runs-on: ubuntu-latest
    needs: [npm_stage, composer_stage]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Get environment variables from Parameter Store
        uses: aws-actions/configure-aws-credentials@v4
        with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
           aws-region: us-east-2
        
      - name: Get value from Parameter Store
        run: |
            aws ssm get-parameter --name "v4-env-dev" --with-decryption --output text --query Parameter.Value > .env

      - name: artifact_upload
        env:
          REPO_NAME: "afton-tickets-v4"
          BRANCH_NAME_DEV: "development"
        run: |
          for i in `echo ${{ vars.V4_DEV_PIPELINE_BASH_ENV }}`; do echo "export $i" >> cicd-helper/.cicd-variable;done
          echo CICD_PIPELINE_ID="${{ github.run_id }}" >> cicd-helper/.cicd-variable
          touch cicd-helper/"${{ github.run_id }}".txt
          sed -i '1 a codedeploy_application_name="'${{ secrets.APPLICATION_NAME_DEV }}'"' cicd-helper/aws_codedeploy.sh
          sed -i '2 a codedeploy_groupname="'${{ secrets.DEPLOYMENT_GROUP_NAME_DEV }}'"' cicd-helper/aws_codedeploy.sh
          sed -i '3 a aws_s3_bucket_name="'${{ secrets. AWS_S3_BUCKET }}'"' cicd-helper/aws_codedeploy.sh
          sed -i '4 a reponame="'$REPO_NAME'"' cicd-helper/aws_codedeploy.sh
          sed -i '5 a branchname="'$BRANCH_NAME_DEV'"' cicd-helper/aws_codedeploy.sh
          sed -i '6 a github_run_id="${{ github.run_id }}"' cicd-helper/aws_codedeploy.sh
          zip -qr ${{ github.run_id }}.zip . -x '*.git*' -x 'node_modules/*' -x '.github/*' -x 'tests/*'
          aws s3 cp ${{ github.run_id }}.zip s3://${{ secrets.AWS_S3_BUCKET }}/$REPO_NAME/$BRANCH_NAME_DEV/${{ github.run_id }}.zip
      - name: Create Deployment
        run: |
          chmod +x cicd-helper/aws_codedeploy.sh
          sh cicd-helper/aws_codedeploy.sh   
