name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
    
  composer_Development:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ github.ref_name }}-composer
          restore-keys: |
            ${{ github.ref_name }}-composer

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts

      - name: Upload vendor directory as artifact
        uses: actions/upload-artifact@v3
        with:
          name: vendor
          path: vendor/

  npm_Development:
    runs-on: ubuntu-latest
    needs: composer_Development
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ github.ref_name }}-npm
          restore-keys: |
            ${{ github.ref_name }}-npm

      - name: Install npm dependencies
        run: npm install

      - name: Build assets for production
        run: npm run build
        env:
          LARAVEL_BYPASS_ENV_CHECK: 1
          
  Create_Env:
      runs-on: ubuntu-latest
      needs: [composer_Development, npm_Development]
      steps:
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
        - name: Get value from Parameter Store
          id: parameter
          uses: poad/get-aws-ssm-parameter@v2.0.0
          with: 
            parameter-name: ${{ secrets.env_path }}
            aws-region: us-east-1
  
        - name: 'Another example step'
          run: echo ${{ steps.parameter.outputs.value }} >.env

        - name: Upload build artifacts
          uses: actions/upload-artifact@v3
          with:
            name: build-artifacts
            path: |
              public/css/
              public/js/
              public/mix-manifest.json/
              .env 
              Get-value-from-Parameter-Store:

  Deploy_Development:
    runs-on: ubuntu-latest
    needs: Create_Env
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize SSH
        run: |
          eval $(ssh-agent -s)
          ssh-add <(echo "${{ secrets.SSH_PRIVATE_KEY }}")

      - name: Change file permissions
        run: chmod +x scripts/*.sh

      - name: Create environment file for development
        run: |
          echo 'export DEV_ENV_VARIABLES' >> scripts/.cicd-variable
          echo 'CICD_PIPELINE_ID=${{ github.run_id }}' >> scripts/.cicd-variable

      - name: Prepare AWS CodeDeploy
        run: |
          sed -i '1 a codedeploy_application_name="${{ secrets.CODEDEPLOY_APPLICATION_NAME }}"' scripts/aws_codedeploy.sh
          sed -i '2 a codedeploy_groupname="${{ secrets.CODEDEPLOY_GROUP_NAME }}"' scripts/aws_codedeploy.sh
          sed -i '3 a aws_s3_bucket_name="${{ secrets.AWS_S3_BUCKET }}"' scripts/aws_codedeploy.sh
          zip -qr ${{ github.run_id }}.zip .

      - name: Upload to S3
        run: aws s3 cp ${{ github.run_id }}.zip s3://${{ secrets.AWS_S3_BUCKET }}/cicd-codedeploy/

      - name: Run CodeDeploy script
        run: bash scripts/aws_codedeploy.sh

    env:
      CODEDEPLOY_APPLICATION_NAME: ${{ secrets.CODEDEPLOY_APPLICATION_NAME }}
      CODEDEPLOY_GROUP_NAME: ${{ secrets.CODEDEPLOY_GROUP_NAME }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
