name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch :

jobs:
    
  composer_Development:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
      - name: Debug - List files before zipping
        run: ls -R
        
  npm_install:
      runs-on: ubuntu-latest
      needs: composer_Development
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install npm dependencies
        run: npm install
      - name: Build assets for production
        run: npm run build
        env:
          LARAVEL_BYPASS_ENV_CHECK: 1
      - name: Debug - List files before zipping
        run: ls -R
        
  s3_zip:
        runs-on: ubuntu-latest
        needs: [npm_install, composer_Development]
        steps:
         - name: Checkout code
           uses: actions/checkout@v3
         - name: Set up AWS credentials
           uses: aws-actions/configure-aws-credentials@v2
           with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

         - name: Debug - List files before zipping
           run: ls -R
        
         - name: zip
           run: zip -qr ${{ github.run_id }}.zip .
         - name: Upload to S3
           run: aws s3 cp ${{ github.run_id }}.zip s3://${{ secrets.AWS_S3_BUCKET }}/cicd-codedeploy/
       
  Deploy_Development:
    runs-on: ubuntu-latest
    needs: s3_zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Prepare AWS CodeDeploy
        run: |
          sed -i '1 a codedeploy_application_name="${{ secrets.CODEDEPLOY_APPLICATION }}"' scripts/aws_codedeploy.sh
          sed -i '2 a codedeploy_groupname="${{ secrets.CODEDEPLOY_GROUPNAME }}"' scripts/aws_codedeploy.sh
          sed -i '3 a aws_s3_bucket_name="${{ secrets.AWS_S3_BUCKET }}"' scripts/aws_codedeploy.sh

      - name: Run CodeDeploy script
        run: bash scripts/aws_codedeploy.sh

    env:
      CODEDEPLOY_APPLICATION_NAME: ${{ secrets.CODEDEPLOY_APPLICATION }}
      CODEDEPLOY_GROUPNAME: ${{ secrets.CODEDEPLOY_GROUP_NAME }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
